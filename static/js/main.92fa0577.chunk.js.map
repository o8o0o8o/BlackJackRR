{"version":3,"sources":["containers/bender.png","redux/actionTypes.js","redux/deckReducer.js","redux/dealerHandReducer.js","redux/playerHandReducer.js","redux/gameStatusReducer.js","redux/dealerScoreReducer.js","redux/playerScoreReducer.js","redux/statisticReducer.js","redux/reducers.js","redux/store.js","containers/StatAndScore.js","cards/Hearts.js","cards/Diamonds.js","cards/Spades.js","cards/Clubs.js","cards/Base.js","interface/DealerHand.js","interface/PlayerHand.js","cards/Back.js","interface/Deck.js","redux/actions.js","interface/ButtonStart.js","interface/ButtonHit.js","interface/ButtonStand.js","containers/ButtonBar.js","containers/Image.js","containers/TutorialStart.js","containers/TutorialHit.js","containers/TutorialStand.js","containers/TutorialDealerHand.js","containers/TutorialPlayerHand.js","containers/Main.js","index.js"],"names":["module","exports","CHANGE_DECK","CHANGE_DEALER_SCORE","CHANGE_PLAYER_SCORE","CHANGE_DEALER_HAND","CHANGE_PLAYER_HAND","CHANGE_STATUS","CHANGE_STATISTIC","initialState","deckState","deck","i","push","arr","length","deckInit","deckReducer","state","action","type","types","dealerState","dealerHand","dealerHandReducer","playerState","playerHand","playerHandReducer","gameStatus","status","gameStatusReducer","dealerScoreState","dealerScore","dealerScoreReducer","playerScoreState","playerScore","playerScoreReducer","statisticState","dealerWon","playerWon","statisticReducer","rootReducer","combineReducers","createStore","undefined","window","__REDUX_DEVTOOLS_EXTENSION__","StatAndScore","className","this","props","statistic","Component","connect","store","Hearts","class","rang","Diamonds","Spades","Clubs","Base","hand","exec","includes","id","suitUp","DealerHand","map","el","PlayerHand","Back","Deck","index","style","position","top","left","changeDeckAction","changePlayerScoreAction","changeDealerScoreAction","changeDealerHandAction","changePlayerHandAction","changeStatusAction","ButtonStart","caption","handleClick","bind","changePlayerScore","changeDealerScore","deckIndex","card","splice","changeDeck","changeDealerHand","changePlayerHand","setState","changeStatus","onClick","value","Math","floor","random","dispatch","elem","actions","ButtonHit","clicked","prevState","ButtonStand","showOff","cardValue","st","stat","updateStat","scoreCheck","winner","changeStatistic","playerChoice","ButtonBar","Image","src","bender","alt","TutorialStart","for","TutorialHit","TutorialStand","TutorialDealerHand","TutorialPlayerHand","Main","generator","gen","shift","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92fa0577.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bender.1377219e.png\";","export const CHANGE_DECK = \"CHANGE_DECK\";\r\nexport const CHANGE_DEALER_SCORE = \"CHANGE_DEALER_SCORE\";\r\nexport const CHANGE_PLAYER_SCORE = \"CHANGE_PLAYER_SCORE\";\r\nexport const CHANGE_DEALER_HAND = \"CHANGE_DEALER_HAND\";\r\nexport const CHANGE_PLAYER_HAND = \"CHANGE_PLAYER_HAND\";\r\nexport const CHANGE_STATUS = \"CHANGE_STATUS\";\r\nexport const CHANGE_STATISTIC = \"CHANGE_STATISTIC\";","import * as types from \"./actionTypes\";\r\n\r\nfunction deckInit() {\r\n  let deck = [];\r\n  for (let i = 2; i <= 10; i++) {\r\n    deck.push(`diamonds_${i}`);\r\n    deck.push(`spades_${i}`);\r\n    deck.push(`hearts_${i}`);\r\n    deck.push(`clubs_${i}`);\r\n  }\r\n  let arr = [\"A\", \"Q\", \"K\", \"J\"];\r\n  for (let i = 0; i < arr.length; i++) {\r\n    deck.push(`diamonds_${arr[i]}`);\r\n    deck.push(`spades_${arr[i]}`);\r\n    deck.push(`hearts_${arr[i]}`);\r\n    deck.push(`clubs_${arr[i]}`);\r\n  }\r\n  return deck;\r\n}\r\n\r\nconst initialState = { deckState: { deck: deckInit() } };\r\n\r\nconst deckReducer = function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.CHANGE_DECK:\r\n      return action.deckState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default deckReducer;","import * as types from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  dealerState: { dealerHand: [] }\r\n};\r\n\r\nconst dealerHandReducer = function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.CHANGE_DEALER_HAND:\r\n      return action.dealerState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dealerHandReducer;\r\n","import * as types from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n    playerState: { playerHand: [] },\r\n};\r\n\r\nconst playerHandReducer = function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.CHANGE_PLAYER_HAND: \r\n      return action.playerState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default playerHandReducer;","import * as types from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  gameStatus: { status: \"Tutorial\" }\r\n};\r\n\r\nconst gameStatusReducer = function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.CHANGE_STATUS:\r\n      return action.gameStatus;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default gameStatusReducer;\r\n","import * as types from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n    dealerScoreState: { dealerScore: 0 },\r\n};\r\n\r\nconst dealerScoreReducer = function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.CHANGE_DEALER_SCORE:\r\n      return action.dealerScoreState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dealerScoreReducer;","import * as types from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n    playerScoreState: { playerScore: 0 },\r\n};\r\n\r\nconst playerScoreReducer = function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.CHANGE_PLAYER_SCORE: \r\n      return action.playerScoreState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default playerScoreReducer;","import * as types from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n      statisticState: {\r\n        dealerWon: 0,\r\n        playerWon: 0\r\n      }\r\n};\r\n\r\nconst statisticReducer = function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.CHANGE_STATISTIC:\r\n      return action.statisticState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default statisticReducer;","import { combineReducers } from 'redux';\r\nimport deckReducer from './deckReducer';\r\nimport dealerHandReducer from './dealerHandReducer';\r\nimport playerHandReducer from './playerHandReducer';\r\nimport gameStatusReducer from './gameStatusReducer';\r\nimport dealerScoreReducer from './dealerScoreReducer';\r\nimport playerScoreReducer from './playerScoreReducer';\r\nimport statisticReducer from './statisticReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  deckState: deckReducer,\r\n  dealerState: dealerHandReducer,\r\n  playerState: playerHandReducer,\r\n  gameStatus: gameStatusReducer,\r\n  dealerScoreState: dealerScoreReducer,\r\n  playerScoreState: playerScoreReducer,\r\n  statisticState: statisticReducer,\r\n});\r\n\r\nexport default rootReducer;","import { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  undefined,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);","import React, { Component } from \"react\";\r\nimport \"./StatAndScore.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass StatAndScore extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"statandscore\">\r\n                 <div className=\"score\">{`Dealer Score: ${this.props.dealerScore}, Player Score: ${this.props.playerScore}`}</div>\r\n                    <div className=\"statistic\">{`Statistic: Dealer Won Times ${this.props.statistic.dealerWon}, Player Won Times ${this.props.statistic.playerWon}`} </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(store) {\r\n  return {\r\n    dealerScore: store.dealerScoreState.dealerScoreState.dealerScore,\r\n    playerScore: store.playerScoreState.playerScoreState.playerScore,\r\n    statistic: store.statisticState.statisticState,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(StatAndScore);\r\n","import React, { Component } from \"react\";\r\nimport \"./Hearts.css\";\r\n\r\nclass Hearts extends Component {\r\n  render() {\r\n    return (\r\n      <div class=\"heart1\">\r\n        <div class=\"heart2\">\r\n          <div class=\"heart3\">\r\n            <div class=\"heart4\">\r\n              <div class=\"heart5\">\r\n                <div class=\"heartrang1\">{this.props.rang}</div>\r\n                <div class=\"heartrang2\">{this.props.rang}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hearts;\r\n","import React, { Component } from \"react\";\r\nimport \"./Diamonds.css\";\r\n\r\nclass Diamonds extends Component {\r\n  render() {\r\n    return (\r\n      <div class=\"diamond1\">\r\n        <div class=\"diamond2\">\r\n          <div class=\"diamondrang1\">{this.props.rang}</div>\r\n          <div class=\"diamondrang2\">{this.props.rang}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Diamonds;\r\n","import React, { Component } from \"react\";\r\nimport \"./Spades.css\";\r\n\r\nclass Spades extends Component {\r\n  render() {\r\n    return (\r\n      <div class=\"spade1\">\r\n        <div class=\"spade2\">\r\n          <div class=\"spade3\">\r\n            <div class=\"spade4\">\r\n              <div class=\"spade5\">\r\n                <div class=\"spade6\">\r\n                  <div class=\"spaderang1\">{this.props.rang}</div>\r\n                  <div class=\"spaderang2\">{this.props.rang}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Spades;\r\n","import React, { Component } from \"react\";\r\nimport \"./Clubs.css\";\r\n\r\nclass Clubs extends Component {\r\n  render() {\r\n    return (\r\n      <div class=\"klub1\">\r\n        <div class=\"klub2\">\r\n          <div class=\"klub3\">\r\n            <div class=\"klub4\">\r\n              <div class=\"klub5\">\r\n                <div class=\"klub6\">\r\n                  <div class=\"klubrang1\">{this.props.rang}</div>\r\n                  <div class=\"klubrang2\">{this.props.rang}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Clubs;\r\n","import React, { Component } from \"react\";\r\nimport \"./Base.css\";\r\nimport Hearts from \"./Hearts\";\r\nimport Diamonds from \"./Diamonds\";\r\nimport Spades from \"./Spades\";\r\nimport Clubs from \"./Clubs\";\r\n\r\n\r\nclass Base extends Component {\r\n\r\n  suitUp() {\r\n  const hand = this.props.hand;\r\n  const regexp = /(?<=_).+/gm;\r\n  const rang = regexp.exec(hand);\r\n  if (hand.includes(\"diamonds\")) {\r\n    return <Diamonds rang={rang}/>;\r\n  }\r\n  if (hand.includes(\"hearts\")) {\r\n    return <Hearts rang={rang}/>;\r\n  }\r\n  if (hand.includes(\"clubs\")) {\r\n    return <Clubs rang={rang}/>;\r\n  }\r\n  if (hand.includes(\"spades\")) {\r\n    return <Spades rang={rang}/>;\r\n  }  \r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"flip-card\">\r\n        <div class=\"flip-card-inner\">\r\n          <div class=\"flip-card-front\">\r\n            <div id=\"base1\">\r\n              <div id=\"base2\">\r\n                <div id=\"gradient\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"flip-card-back\">\r\n            <div class=\"base\">\r\n            {this.suitUp()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default Base;\r\n","import React, { Component } from \"react\";\r\nimport \"./DealerHand.css\";\r\nimport Base from \"../cards/Base\";\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nclass DealerHand extends Component {  \r\n  render() {\r\n    return (\r\n      <div className=\"dealerhand\">\r\n        {this.props.dealerHand.map(\r\n          el => <Base hand={el}/>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(store) {\r\n  return { dealerHand: store.dealerState.dealerState.dealerHand }\r\n}\r\n\r\nexport default connect(mapStateToProps)(DealerHand)\r\n","import React, { Component } from \"react\";\r\nimport \"./PlayerHand.css\";\r\nimport Base from \"../cards/Base\";\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nclass PlayerHand extends Component {  \r\n  render() {\r\n    return (\r\n      <div className=\"dealerhand\">\r\n        {this.props.playerHand.map(\r\n          el => <Base hand={el}/>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { playerHand: state.playerState.playerState.playerHand }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PlayerHand)\r\n","import React, { Component } from \"react\";\r\nimport  \"./Back.css\";\r\n\r\nclass Back extends Component {\r\n  render() {\r\n    return (      \r\n        <div id=\"back\">\r\n          <div id=\"base2\">\r\n            <div id=\"gradient\"></div>\r\n          </div>\r\n        </div>      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Back;\r\n","import React, { Component } from \"react\";\r\nimport \"./Deck.css\";\r\nimport Back from \"../cards/Back\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Deck extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"holder\">\r\n       {this.props.deck.map( (el, index) => <div style={{position: \"relative\", top: `${9 - (index * 8.99)}em`, left: `${(index * 0.01) - 6}em`}}><Back /></div>)}        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(store) {\r\n    return {\r\n      deck: store.deckState.deckState.deck,      \r\n    };\r\n  }\r\n  \r\n  export default connect(mapStateToProps)(Deck);\r\n  ","import * as types from \"./actionTypes\";\r\n\r\nexport function changeDeckAction(deckState) {    \r\n    return {\r\n        type: types.CHANGE_DECK,\r\n        deckState\r\n    }\r\n}\r\n\r\nexport function changePlayerScoreAction(playerScoreState){    \r\n    return {\r\n        type: types.CHANGE_PLAYER_SCORE,\r\n        playerScoreState\r\n    }\r\n}\r\n\r\nexport function changeStatisticAction(statisticState){      \r\n    return {\r\n        type: types.CHANGE_STATISTIC,\r\n        statisticState\r\n    }\r\n}\r\n\r\nexport function changeDealerScoreAction(dealerScoreState){    \r\n    return {\r\n        type: types.CHANGE_DEALER_SCORE,\r\n        dealerScoreState\r\n    }\r\n}\r\n\r\nexport function changeDealerHandAction(dealerState){    \r\n    return {\r\n        type: types.CHANGE_DEALER_HAND,\r\n        dealerState\r\n    }\r\n}\r\n\r\nexport function changePlayerHandAction(playerState){    \r\n    return {\r\n        type: types.CHANGE_PLAYER_HAND,\r\n        playerState\r\n    }\r\n}\r\n\r\nexport function changeStatusAction(gameStatus){        \r\n    return {\r\n        type: types.CHANGE_STATUS,\r\n        gameStatus\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport \"./ButtonStart.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../redux/actions\";\r\n\r\nclass ButtonStart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { caption: \"Start\" };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    if (this.props.status === \"End\") {\r\n      this.props.changePlayerScore({ playerScoreState: { playerScore: 0 } });\r\n      this.props.changeDealerScore({ dealerScoreState: { dealerScore: 0 } });\r\n      let deck = this.props.deck;\r\n      let index = deckIndex(deck);\r\n      let card = deck[index];\r\n      let dealerHand = [];\r\n      dealerHand.push(card);\r\n      deck.splice(index, 1);\r\n      index = deckIndex(deck);\r\n      card = deck[index];\r\n      dealerHand.push(card);\r\n      deck.splice(index, 1);\r\n      index = deckIndex(deck);\r\n      card = deck[index];\r\n      let playerHand = [];\r\n      playerHand.push(card);\r\n      deck.splice(index, 1);\r\n      index = deckIndex(deck);\r\n      card = deck[index];\r\n      playerHand.push(card);\r\n      deck.splice(index, 1);\r\n      this.props.changeDeck({ deckState: { deck } });\r\n      this.props.changeDealerHand({ dealerState: { dealerHand } });\r\n      this.props.changePlayerHand({ playerState: { playerHand } });\r\n      this.setState(() => ({ caption: \"Playing\" }));\r\n      this.props.changeStatus({ gameStatus: { status: \"Playing\" } });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <span>\r\n        {\" \"}\r\n        <input\r\n          type=\"button\"\r\n          className=\"start button\"\r\n          onClick={this.handleClick}\r\n          value={\r\n            this.props.status === \"End\" || this.props.status === \"Tutorial\"\r\n              ? \"Start\"\r\n              : \"Playing\"\r\n          }\r\n        />\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nfunction deckIndex(deck) {\r\n  return Math.floor(Math.random() * deck.length);\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    changeDeck: elem => dispatch(actions.changeDeckAction(elem)),\r\n    changeDealerHand: elem => dispatch(actions.changeDealerHandAction(elem)),\r\n    changePlayerHand: elem => dispatch(actions.changePlayerHandAction(elem)),\r\n    changeStatus: elem => dispatch(actions.changeStatusAction(elem)),\r\n    changePlayerScore: elem => dispatch(actions.changePlayerScoreAction(elem)),\r\n    changeDealerScore: elem => dispatch(actions.changeDealerScoreAction(elem))\r\n  };\r\n}\r\n\r\nfunction mapStateToProps(store) {\r\n  return {\r\n    deck: store.deckState.deckState.deck,\r\n    status: store.gameStatus.gameStatus.status\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonStart);\r\n","import React, { Component } from \"react\";\r\nimport \"./ButtonHit.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../redux/actions\";\r\n\r\nclass ButtonHit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { clicked: false };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    if (this.props.status === \"Playing\") {\r\n      let deck = this.props.deck;\r\n      let index = Math.floor(Math.random() * deck.length);\r\n      let card = deck[index];\r\n      let playerHand = this.props.playerHand;\r\n      playerHand.push(card);\r\n      deck.splice(index, 1);\r\n      this.setState(prevState => ({ clicked: !prevState.clicked }));\r\n      this.props.changeDeck({ deckState: { deck } });      \r\n      this.props.changePlayerHand({\r\n        playerState: { playerHand: [...playerHand] }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (      \r\n        <input\r\n          type=\"button\"\r\n          className=\"hit button\" \r\n          value=\"Hit\"\r\n          onClick={this.handleClick}\r\n        />      \r\n    );\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    changeDeck: elem => dispatch(actions.changeDeckAction(elem)),\r\n    changePlayerHand: elem => dispatch(actions.changePlayerHandAction(elem))\r\n  };\r\n}\r\n\r\nfunction mapStateToProps(store) {\r\n  return {\r\n    deck: store.deckState.deckState.deck,\r\n    status: store.gameStatus.gameStatus.status,\r\n    playerHand: store.playerState.playerState.playerHand\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonHit);\r\n","import React, { Component } from \"react\";\r\nimport \"./ButtonStand.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../redux/actions\";\r\n\r\nclass ButtonStand extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { clicked: false };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  handleClick() {\r\n    if (this.props.status === \"Playing\") {\r\n      if (true) {\r\n        this.setState(() => ({ clicked: true }));\r\n        this.props.changeStatus({ gameStatus: { status: \"End\" } });\r\n      }\r\n    this.showOff();  \r\n    let deck = deckInit();\r\n    this.props.changeDeck({ deckState: { deck } });\r\n    this.props.changeDealerHand({ dealerState: { dealerHand: [] } });\r\n    this.props.changePlayerHand({ playerState: { playerHand: [] } });   \r\n    }        \r\n  }\r\n  \r\nshowOff() {\r\n  let dealerScore = this.props.dealerScore;\r\n  let playerScore = this.props.playerScore;\r\n  let playerHand = this.props.playerHand;\r\n  let dealerHand = this.props.dealerHand;   \r\n  for (let i = 0; i < playerHand.length; i++) {\r\n    playerScore += cardValue(playerHand[i]);    \r\n  }\r\n  dealerScore += cardValue(dealerHand[0]);\r\n  dealerScore += cardValue(dealerHand[1]);  \r\n  this.props.changePlayerScore({ playerScoreState: { playerScore } });\r\n  this.props.changeDealerScore({ dealerScoreState: { dealerScore } });  \r\n  let st = scoreCheck(dealerScore, playerScore, this.props.statistic);    \r\n  this.props.changeStatistic({statisticState: st});\r\n\r\n  function updateStat(winner, stat) {      \r\n    let statistic = stat;  \r\n    ++statistic[winner]; \r\n    return  statistic;\r\n  }\r\n\r\n  function scoreCheck(dealerScore, playerScore, stat) {     \r\n    if (dealerScore === 21) {\r\n      return updateStat(\"dealerWon\", stat);\r\n    }\r\n    if (playerScore === 21) {\r\n      return updateStat(\"playerWon\", stat);\r\n    }\r\n    if (dealerScore > 21 && playerScore < 21) {\r\n      return updateStat(\"playerWon\", stat);\r\n    }\r\n    if (playerScore > 21 && dealerScore < 21) {\r\n      return updateStat(\"dealerWon\", stat);\r\n    }  \r\n    if (playerScore < 21 && dealerScore < 21) {\r\n      if (playerScore > dealerScore) {\r\n        return updateStat(\"playerWon\", stat);\r\n      }\r\n      if (dealerScore > playerScore) {        \r\n        return updateStat(\"dealerWon\", stat);\r\n      }\r\n    }    \r\n      return stat;    \r\n  }\r\n}\r\n  render() {\r\n    return (      \r\n        <input\r\n          type=\"button\"\r\n          className=\"stand button\" \r\n          value=\"Stand\"\r\n          onClick={this.handleClick}\r\n        />      \r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nlet playerChoice = 1;\r\nfunction cardValue(hand) {  \r\n  let regexp = /(?<=_).+/gm;\r\n  hand = regexp.exec(hand);  \r\n  if (hand[0] === \"A\") {\r\n    return playerChoice;\r\n  }\r\n  if ((hand[0] === \"Q\") | (hand[0] === \"K\") | (hand[0] === \"J\")) {\r\n    return 10;\r\n  }\r\n  return +hand;\r\n}\r\n\r\nfunction deckInit() {\r\n  let deck = [];\r\n  for (let i = 2; i <= 10; i++) {\r\n    deck.push(`diamonds_${i}`);\r\n    deck.push(`spades_${i}`);\r\n    deck.push(`hearts_${i}`);\r\n    deck.push(`clubs_${i}`);\r\n  }\r\n  let arr = [\"A\", \"Q\", \"K\", \"J\"];\r\n  for (let i = 0; i < arr.length; i++) {\r\n    deck.push(`diamonds_${arr[i]}`);\r\n    deck.push(`spades_${arr[i]}`);\r\n    deck.push(`hearts_${arr[i]}`);\r\n    deck.push(`clubs_${arr[i]}`);\r\n  }\r\n  return deck;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    changeStatus: elem => dispatch(actions.changeStatusAction(elem)),\r\n    changeDeck: elem => dispatch(actions.changeDeckAction(elem)),\r\n    changeDealerHand: elem => dispatch(actions.changeDealerHandAction(elem)),\r\n    changePlayerHand: elem => dispatch(actions.changePlayerHandAction(elem)),\r\n    changePlayerScore: elem => dispatch(actions.changePlayerScoreAction(elem)),\r\n    changeDealerScore: elem => dispatch(actions.changeDealerScoreAction(elem)),\r\n    changeStatistic: elem => dispatch(actions.changeStatisticAction(elem)),\r\n  };\r\n}\r\n\r\nfunction mapStateToProps(store) {\r\n  return {\r\n    status: store.gameStatus.gameStatus.status,\r\n    dealerHand: store.dealerState.dealerState.dealerHand,\r\n    playerHand: store.playerState.playerState.playerHand,\r\n    dealerScore: store.dealerScoreState.dealerScoreState.dealerScore,\r\n    playerScore: store.playerScoreState.playerScoreState.playerScore,\r\n    statistic: store.statisticState.statisticState,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonStand);\r\n","import React, { Component } from \"react\";\r\nimport \"./ButtonBar.css\";\r\nimport ButtonStart from '../interface/ButtonStart';\r\nimport ButtonHit from '../interface/ButtonHit';\r\nimport ButtonStand from '../interface/ButtonStand';\r\n\r\nclass ButtonBar extends Component {\r\n \r\n  render() {\r\n    return (\r\n      <div className=\"buttonbar\">\r\n        <ButtonStart />\r\n        <ButtonHit />\r\n        <ButtonStand />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ButtonBar;\r\n","import React, { Component } from \"react\";\r\nimport \"./Image.css\";\r\nimport bender from \"./bender.png\"\r\n\r\nclass Image extends Component {\r\n  render() {\r\n    return (\r\n         <img src={bender} alt=\"bender\" className=\"bender\"/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Image;","import React, { Component } from \"react\";\r\nimport \"./Tutorial.css\";\r\n\r\nclass TutorialStart extends Component {\r\n  render() {\r\n    return (\r\n      <span className=\"popup\">\r\n        <input\r\n          type=\"button\"\r\n          className=\"start button\"\r\n          value=\"Start\"          \r\n        />\r\n        <label for=\"start\" className=\"popup-content\">\r\n          Press Start to begin\r\n        </label>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TutorialStart;\r\n","import React, { Component } from \"react\";\r\nimport \"./Tutorial.css\";\r\n\r\nclass TutorialHit extends Component {\r\n  render() {\r\n    return (\r\n      <span className=\"popup\">\r\n        <input\r\n          type=\"button\"\r\n          className=\"hit button\"\r\n          value=\"Hit\"          \r\n        />\r\n        <label for=\"Hit\" className=\"popup-content\">\r\n          Press Hit to get one more card\r\n        </label>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TutorialHit;\r\n","import React, { Component } from \"react\";\r\nimport \"./Tutorial.css\";\r\n\r\nclass TutorialStand extends Component {\r\n  render() {\r\n    return (\r\n      <span className=\"popup\">\r\n        <input\r\n          type=\"button\"\r\n          className=\"stand button\"\r\n          value=\"Stand\"          \r\n        />\r\n        <label for=\"stand\" className=\"popup-content\">\r\n          Press Stand to immediately finish the game\r\n        </label>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TutorialStand;\r\n","import React, { Component } from \"react\";\r\nimport \"./Tutorial.css\";\r\nimport Back from \"../cards/Back\";\r\n\r\nclass TutorialDealerHand extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"dealerhand\">\r\n        <Back />\r\n        <Back />\r\n        <div>\r\n          <label for=\"dealerhand\" class=\"popup-content\" id=\"popup-content\">\r\n            Here will be shown dealer cards\r\n          </label>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TutorialDealerHand;\r\n","import React, { Component } from \"react\";\r\nimport \"./Tutorial.css\";\r\nimport Back from \"../cards/Back\";\r\n\r\nclass TutorialPlayerHand extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"playerhand\">\r\n        <Back />\r\n        <Back />\r\n        <div>\r\n          <label for=\"playerhand\" class=\"popup-content\" id=\"popup-content\">\r\n            Here will be shown player cards\r\n          </label>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TutorialPlayerHand;\r\n","import React, { Component } from \"react\";\r\nimport \"./Main.css\";\r\nimport StatAndScore from \"./StatAndScore\";\r\nimport DealerHand from \"../interface/DealerHand\";\r\nimport PlayerHand from \"../interface/PlayerHand\";\r\nimport Deck from \"../interface/Deck\";\r\nimport ButtonBar from \"./ButtonBar\";\r\nimport Image from \"./Image\";\r\nimport TutorialStart from \"./TutorialStart\";\r\nimport TutorialHit from \"./TutorialHit\";\r\nimport TutorialStand from \"./TutorialStand\";\r\nimport ButtonStart from \"../interface/ButtonStart\";\r\nimport ButtonHit from \"../interface/ButtonHit\";\r\nimport ButtonStand from \"../interface/ButtonStand\";\r\nimport TutorialDealerHand from \"./TutorialDealerHand\";\r\nimport TutorialPlayerHand from \"./TutorialPlayerHand\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../redux/actions\";\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { clicked: false };\r\n    this.state = {\r\n      generator: [\r\n        <div className=\"main\">\r\n          <StatAndScore />\r\n          <DealerHand />\r\n          <PlayerHand />\r\n          <div className=\"buttonbar popup\">\r\n            <TutorialStart />\r\n          </div>\r\n          <Image />\r\n        </div>,\r\n        <div className=\"main\">\r\n          <StatAndScore />\r\n          <DealerHand />\r\n          <PlayerHand />\r\n          <div className=\"buttonbar popup\">\r\n            <ButtonStart />\r\n            <TutorialHit />\r\n          </div>\r\n          <Image />\r\n        </div>,\r\n        <div className=\"main\">\r\n          <StatAndScore />\r\n          <DealerHand />\r\n          <PlayerHand />\r\n          <div className=\"buttonbar popup\">\r\n            <ButtonStart />\r\n            <ButtonHit />\r\n            <TutorialStand />\r\n          </div>\r\n          <Image />\r\n        </div>,\r\n        <div className=\"main\">\r\n          <StatAndScore />\r\n          <div className=\"popup\">\r\n            <TutorialDealerHand />\r\n          </div>\r\n          <PlayerHand />\r\n          <div className=\"buttonbar popup\">\r\n            <ButtonStart />\r\n            <ButtonHit />\r\n            <ButtonStand />\r\n          </div>\r\n          <Image />\r\n        </div>,\r\n        <div className=\"main\">\r\n          <StatAndScore />\r\n          <DealerHand />\r\n          <div className=\"popup\">\r\n            <TutorialPlayerHand />\r\n          </div>\r\n          <PlayerHand />\r\n          <ButtonBar />\r\n          <Image />\r\n        </div>\r\n      ]\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    let gen = this.state.generator;\r\n    gen.shift();\r\n    this.setState(prev => ({ generator: gen }));\r\n    if (gen.length === 0 && this.props.status === \"Tutorial\") {\r\n      this.props.changeStatus({ gameStatus: { status: \"End\" } });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div onClick={this.handleClick}>\r\n        {this.state.generator[0] !== undefined ? (\r\n          this.state.generator[0]\r\n        ) : (\r\n          <div className=\"container\">\r\n            <StatAndScore />\r\n            <DealerHand />\r\n            <PlayerHand />\r\n            <ButtonBar />\r\n            <Image />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    changeStatus: elem => dispatch(actions.changeStatusAction(elem))\r\n  };\r\n}\r\n\r\nfunction mapStateToProps(store) {\r\n  return {\r\n    status: store.gameStatus.gameStatus.status\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport Main from './containers/Main';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Main />   \n  </Provider>, document.getElementById(\"root\"));"],"sourceRoot":""}